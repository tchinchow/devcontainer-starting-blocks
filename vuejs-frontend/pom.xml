<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.tchinchow.snippet.vuejs-springboot-demo</groupId>
        <artifactId>vuejs-spring-boot-demo</artifactId>
        <version>${revision}</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>vuejs-spring-boot-demo-vuejs-frontend</artifactId>
    <name>vuejs-spring-boot-demo-vuejs-frontend</name>
    <description>Demo project serving a VueJs front-end over a Spring Boot back-end (VueJS front-end project)</description>
    <packaging>jar</packaging>

    <properties>
        <frontend-maven-plugin.version>1.8.0</frontend-maven-plugin.version>
        <node.version>v21.6.1</node.version>
    </properties>

    <build>
        <plugins>
            <!-- By default we do not clean the 
                 - node, and
                 - node_modules folders
                 because we would have to download dependencies over and over again.

                 The following configuration snippet is provided however if you need a more agressive setup...
                 More information: http://maven.apache.org/plugins/maven-clean-plugin/examples/delete_additional_files.html
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>node</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>node_modules</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>
                <executions>
                    <!-- Install a specific node and npm version to run npm/node scripts -->
                    <!-- TODO:
                         eirslett frontend-maven-plugin plugin was really useful before
                         devcontainers but is probably a little obsolete our not suited
                         in a devcontainer setup where we could just use the `maven-exec-plugin`.
                    -->
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                        </configuration>
                    </execution>

                    <!-- Install all project dependencies -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <!-- Build and minify static files -->
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>

                    <!-- Run Unit tests with Jest -->
                    <!--
                    <execution>
                        <id>npm run test:unit</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <arguments>run test:unit</arguments>
                        </configuration>
                    </execution>
                    -->
                    <!-- Run End2End tests with Cypress -->
                    <!--
                    <execution>
                        <id>npm run test:e2e</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <arguments>run test:e2e</arguments>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>
        </plugins>
    </build>
</project>